{"version":3,"sources":["utils/index.js","cons.js","components/Contract/index.js","components/Historial/index.js","components/Oficina/index.js","components/Oficina2/index.js","components/TronLinkGuide/index.js","components/PanelOwner/index.js","components/App/index.js","index.js","components/TronLinkGuide/TronLinkLogo.png"],"names":["utils","tronWeb","contract","setTronWeb","this","setContract","contractAddress","at","Historial","props","state","historial","verHistorial","bind","consultarUsuario","a","Utils","window","setInterval","direccionTRX","proxyUrl","cons","apiUrl","fetch","catch","error","console","response","json","setState","trx","getAccount","direccion","address","fromHex","usuario","active","record","length","o","i","ver","date","Date","done","evento","className","key","_id","style","fontSize","title","amount","method","splice","type","onClick","width","height","overflow","Component","delay","ms","Promise","res","setTimeout","Oficina","rango","ganancia","refe","link","registered","balanceTrx","withdrawnTrx","investedWozx","withdrawnWozx","miPrecioWozx","priceUSDWOZX","depositos","Investors","enviarWozx","Link","Wozx","Wozx2","rateW","consultarTransaccion","enfGpx","unfGpx","id","texto","result","items","xauPrice","document","getElementById","value","loc","location","href","indexOf","split","mydireccion","investors","call","investor","balanceOf","balanceFrozen","decimals","parseInt","_hex","estilo","reclamar","ingresed","out","paidAt","viewDeposits","deposito1","now","toString","cantidad","parseFloat","account","accountAddress","isAddress","isNaN","alert","confirm","transfer","send","pago","meses","freezGPXS","unFreezGPXS","toFixed","aria-describedby","placeholder","cursor","Oficina2","ratetrx","ratewozx","tipo","auth","texto3","texto4","fee","feetrx","funcion","alerta","balanceRef","totalRef","invested","my","withdrawn","activar","Tron","rateGPX","activeAcount","venderGPXS","actualizarUsuario","actualizarUser","verifica","datos","token","headers","body","JSON","stringify","data","log","MYwithdrawable","My","ids","mywithdrawableWozx","wallet","time","txhash","claimAcount","GPX","usd","gpxs","moneda","ope","nuevoDato","push","metodo","fecha","realizado","fechaEnvio","WEBSTORE_URL","logo","src","TronLinkLogo","alt","openTronLink","open","TronLinkGuide","installed","target","rel","PanelOwner","isowner","retiros","saldo","pararRetiros","stopWithdrawl","Do","withdrawAll","sacarSaldo","App","loggedIn","resolve","tronWebState","ready","tries","timer","TronWeb","clearInterval","defaultAddress","hex","toHex","base58","on","root","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.4a70e771.chunk.js","sourcesContent":["const utils = {\r\n  tronWeb: false,\r\n  contract: false,\r\n\r\n  setTronWeb(tronWeb) {\r\n    this.tronWeb = tronWeb;\r\n  },\r\n\r\n  async setContract(tronWeb, contractAddress) {\r\n    this.contract = await tronWeb.contract().at(contractAddress);\r\n  }\r\n};\r\n\r\nexport default utils;\r\n","import {APP_MT} from \"@env\";\r\n\r\nconst proxy = \"https://proxy-stablebank.herokuapp.com/\";\r\nconst mongo = \"https://db-expancion-network.herokuapp.com/\";\r\nconst WS = \"TEf72oNbP7AxDHgmb2iFrxE2t1NJaLjTv5\";//T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb recibe los huerfanos y pagos por defecto\r\nconst descuento = 0.01;// 0.14 es el 14% que queda en la plataforma el restante osea el 86% para comprar wozx y repartir los referidos\r\nconst WOZX = 0.07; // para que el WOZX se Compre de inmediato\r\nconst TRX = 0.035; // para que el TRX se Venda de inmediato\r\nconst SC = \"TF1aXPN5kZwPsaFjrFPD7jBKPpAzXYdR8S\";// TF1aXPN5kZwPsaFjrFPD7jBKPpAzXYdR8S // pruebas THDEbXbnYFhWJwdsesyXPJMQAUNjTPDG8B direccion del contrato\r\nconst USD = 1; // minimo de inversion en dolares USD (100)\r\nconst SD = 0.1; // 10% de sensibilidad para modificar el precio minimo de inversion\r\nconst EX = \"TEf72oNbP7AxDHgmb2iFrxE2t1NJaLjTv5\"; //wallet de of exchange\r\n\r\nconst MT = APP_MT; //token para acceder a base de datos\r\n\r\nconst RW = [0.05, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.01]; // niveles y recompensas de cada nivel\r\n\r\nconst CR = 50; // costo de registro en la plataforma trx\r\n\r\nconst CE = 40; // Cantidad extra de tron que hay que tener para cubrir gastos de energia\r\n\r\nconst FEEW = 0.025; //fee de retiro del wozx por la platafora de ethereum\r\nconst FEET = 10; //fee de retiro del Tron por medio del contrato\r\n\r\nconst withdrawl = 0.1; //10% de los retiros comision extra\r\nconst minWithdrawl = 150;\r\n\r\nconst habilitarRetirosContrato = false;\r\n\r\nexport default {\r\n  proxy,WS, MT, descuento,\r\n     WOZX, TRX,\r\n      SC, USD, SD, EX,\r\n       FEEW, FEET,\r\n        mongo,\r\n         CR, CE, RW,\r\n          withdrawl, minWithdrawl,\r\n          habilitarRetirosContrato\r\n        };\r\n","\r\nimport cons from \"../../cons.js\";\r\n\r\nconst contractAddress = cons.SC;\r\n\r\nexport default contractAddress;","import React, { Component } from \"react\";\r\n\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\nimport cons from \"../../cons.js\";\r\n\r\nexport default class Historial extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      historial: []\r\n\r\n    }\r\n\r\n    this.verHistorial = this.verHistorial.bind(this);\r\n    this.consultarUsuario = this.consultarUsuario.bind(this);\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    await this.verHistorial();\r\n    setInterval(() => this.verHistorial(),30*1000);\r\n  };\r\n\r\n  async consultarUsuario(direccionTRX){\r\n\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'consultar/'+direccionTRX;\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    //console.log(json);\r\n    return json;\r\n\r\n  };\r\n\r\n  async verHistorial(){\r\n\r\n    var historial = [];\r\n\r\n    this.setState({\r\n      historial: historial\r\n    });\r\n\r\n    var direccion =  await window.tronWeb.trx.getAccount();\r\n    direccion = window.tronWeb.address.fromHex(direccion.address);\r\n\r\n    var usuario =  await this.consultarUsuario(direccion);\r\n\r\n    if ( usuario.active ) {\r\n\r\n      if ( usuario.record.length > 0) {\r\n\r\n        var o = 0\r\n        if (usuario.record.length > 10) {\r\n          o = usuario.record.length-10;\r\n        }\r\n        for (var i = o; i < usuario.record.length; i++) {\r\n\r\n          var ver = usuario.record[i];\r\n          ver.date = new Date(ver.date);\r\n\r\n          if(ver.done){\r\n            ver.done = \"Completado\"\r\n          }else{\r\n            ver.done = \"Procesando\"\r\n          }\r\n\r\n          let evento = (\r\n\r\n              <div className=\"col-full\" key={ver._id}>\r\n                  <span style={{fontSize: '18px'}} title={ver.date}> {ver.amount} GPX-S | Retiro en {ver.method} | {ver.done} </span>\r\n               \r\n              </div>\r\n\r\n          );\r\n          historial.splice(0,0,evento);\r\n\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      historial: historial\r\n    });\r\n\r\n  };\r\n\r\n  render() {\r\n\r\n    const divStyle = {\r\n      width: '100%',\r\n      height:'115px',\r\n      overflow: 'scroll'\r\n    };\r\n\r\n    return (\r\n\r\n      <div>\r\n        <h3>Transactions <button type=\"button\" className=\"btn btn-light\" onClick={() => this.verHistorial()}>Reload</button></h3>\r\n\r\n        <div style={divStyle} >\r\n\r\n          {this.state.historial}\r\n\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nimport cons from \"../../cons.js\";\r\n\r\n\r\nconst delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\n\r\nexport default class Oficina extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      rango: \"N/A\",\r\n      ganancia: 0,\r\n      refe: [[],[],[],[],[],[],[],[],[],[]],\r\n      direccion: \"\",\r\n      link: \"Make an investment to get the referral LINK\",\r\n      registered: false,\r\n      balanceTrx: \"0\",\r\n      withdrawnTrx: \"0\",\r\n      investedWozx: \"0\",\r\n      withdrawnWozx: \"0\",\r\n      miPrecioWozx: 0,\r\n      priceUSDWOZX: 0,\r\n      depositos: []\r\n\r\n    };\r\n\r\n    this.Investors = this.Investors.bind(this);\r\n    this.enviarWozx = this.enviarWozx.bind(this);\r\n    this.Link = this.Link.bind(this);\r\n    this.Wozx = this.Wozx.bind(this);\r\n    this.Wozx2 = this.Wozx2.bind(this);\r\n    this.rateW = this.rateW.bind(this);\r\n\r\n    this.consultarTransaccion = this.consultarTransaccion.bind(this);\r\n    this.enfGpx = this.enfGpx.bind(this);\r\n    this.unfGpx = this.unfGpx.bind(this);\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    this.rateW();\r\n    await this.Link();\r\n    await this.Investors();\r\n    setInterval(() => this.Investors(),1*1000);\r\n  };\r\n\r\n  async consultarTransaccion(id){\r\n\r\n    this.setState({\r\n      texto: \"Updating balance...\"\r\n    });\r\n    await delay(3000);\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'consultar/transaccion/'+id;\r\n\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)});\r\n    const json = await response.json();\r\n\r\n    return json.result;\r\n\r\n  };\r\n\r\n\r\n  async rateW(){\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = 'https://data-asg.goldprice.org/dbXRates/USD';\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n    //console.log(json);\r\n    this.setState({\r\n      priceUSDWOZX: json.items[0].xauPrice\r\n    });\r\n\r\n    return json.items[0].xauPrice;\r\n\r\n  };\r\n\r\n  async Wozx (){\r\n\r\n    const { investedWozx } = this.state;\r\n\r\n    document.getElementById(\"cantidadwozx\").value = investedWozx;\r\n\r\n  };\r\n\r\n  async Wozx2 (){\r\n\r\n    const { investedWozx } = this.state;\r\n\r\n    document.getElementById(\"cantidadwozx2\").value = investedWozx;\r\n\r\n  };\r\n\r\n  async Link() {\r\n    const {registered} = this.state;\r\n    if(registered){\r\n\r\n      let loc = document.location.href;\r\n      if(loc.indexOf('?')>0){\r\n        loc = loc.split('?')[0];\r\n        loc = loc.split('#')[0];\r\n      }\r\n      let mydireccion = await window.tronWeb.trx.getAccount();\r\n      mydireccion = window.tronWeb.address.fromHex(mydireccion.address)\r\n      mydireccion = loc+'?ref='+mydireccion;\r\n      this.setState({\r\n        link: mydireccion,\r\n      });\r\n    }else{\r\n      this.setState({\r\n        link: \"Haz una inversión para obtener el LINK de referido\",\r\n      });\r\n    }\r\n  }\r\n\r\n  async Investors() {\r\n\r\n    await this.rateW();\r\n\r\n    const { priceUSDWOZX} = this.state;\r\n\r\n    var direccion = await window.tronWeb.trx.getAccount();\r\n    direccion = direccion = window.tronWeb.address.fromHex(direccion.address);\r\n\r\n    var investor = await Utils.contract.investors(direccion).call();\r\n    var balanceOf = await Utils.contract.balanceOf(direccion).call();\r\n    var balanceFrozen = await Utils.contract.balanceFrozen(direccion).call();\r\n\r\n    var decimals = await Utils.contract.decimals().call();\r\n\r\n    balanceFrozen = parseInt(balanceFrozen._hex)/10**decimals;\r\n    balanceOf = parseInt(balanceOf._hex)/10**decimals;\r\n\r\n    var depositos = [];\r\n\r\n    var estilo = {};\r\n\r\n    var texto = \"UnFreez GPX-S\";\r\n\r\n    var reclamar = null;\r\n\r\n    investor.ingresed = parseInt(investor.ingresed._hex)/10**decimals;\r\n    investor.out = parseInt(investor.out._hex)/10**decimals;\r\n    investor.paidAt = parseInt(investor.paidAt._hex);\r\n\r\n    //console.log(investor);\r\n\r\n    if(balanceFrozen > 0 || investor.out > 0){\r\n\r\n      var deposito1 = await Utils.contract.viewDeposits(direccion,0).call();\r\n\r\n      \r\n      for (let i = 0; i < parseInt(deposito1[4]._hex); i++) {\r\n\r\n        deposito1 = await Utils.contract.viewDeposits(direccion,i).call();\r\n\r\n        deposito1[0] = parseInt(deposito1[0]._hex);\r\n        deposito1[1] = parseInt(deposito1[1]._hex);\r\n        deposito1[2] = parseInt(deposito1[2]._hex)/10**decimals;\r\n        \r\n\r\n        if(deposito1[3] && Date.now()/1000 > deposito1[1]){\r\n          estilo = {'backgroundColor': 'green','color': 'white','borderBlockColor': 'green'};\r\n          texto = \"UnFreez GPX-S\";\r\n          reclamar = () => this.unfGpx();\r\n        }else{\r\n          estilo = {'backgroundColor': 'gray','color': 'white','borderBlockColor': 'gray'};\r\n\r\n          if( investor.paidAt > deposito1[1]){\r\n            texto = \"Claimed\";\r\n          }else{\r\n            texto = \"UnFreez GPX-S\";\r\n          }\r\n          \r\n        }\r\n\r\n        \r\n\r\n        depositos[i] = \r\n        (\r\n        <div className=\"row centrartexto\" key={\"deposito-\"+i}>\r\n\r\n          <div className=\"col-twelve\">\r\n          <hr style={{\"border\": \"solid rgb(255 255 255)\"}}></hr>\r\n\r\n          <h1 className=\"subhead\">Cantidad: {deposito1[2]}</h1>\r\n          <hr></hr>\r\n\r\n          </div>\r\n\r\n          <div className=\"col-four\">\r\n\r\n              <h2 className=\"display-2--light\"> Inicio: </h2>\r\n              <small id=\"wozxHelp\" className=\"form-text text-muted\">{new Date(deposito1[0]*1000).toString()}</small>\r\n              \r\n\r\n          </div>\r\n          <div className=\"col-four\">\r\n\r\n              <h2 className=\"display-2--light\"> Fin: </h2>\r\n              <small id=\"wozxHelp\" className=\"form-text text-muted\">{new Date(deposito1[1]*1000).toString()}</small>\r\n              \r\n\r\n          </div>\r\n\r\n          <div className=\"col-four\">\r\n\r\n              <p>\r\n              <button type=\"button\" className=\"btn btn-light\" style={estilo} onClick={reclamar}>{texto}</button>\r\n              </p>\r\n          </div>\r\n      </div>\r\n        );\r\n\r\n      \r\n      }\r\n\r\n      //console.log(deposito1[3]);\r\n\r\n    }\r\n\r\n    this.setState({\r\n      depositos: depositos\r\n    });\r\n\r\n\r\n\r\n \r\n\r\n    this.setState({\r\n      direccion: direccion,\r\n      balanceTrx: 100,\r\n      withdrawnTrx: 0,\r\n      investedWozx: balanceOf-balanceFrozen,\r\n      withdrawnWozx: balanceFrozen,\r\n      miPrecioWozx: balanceOf*priceUSDWOZX\r\n    });\r\n\r\n  };\r\n\r\n\r\n  async enviarWozx(){\r\n\r\n    const {investedWozx} = this.state;\r\n\r\n    let direccion = document.getElementById(\"enviartronwozx\").value;\r\n    var cantidad = document.getElementById(\"cantidadwozx\").value;\r\n    cantidad = parseFloat(cantidad);\r\n\r\n    var account =  await window.tronWeb.trx.getAccount();\r\n    var accountAddress = account.address;\r\n    accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n\r\n    var result= false;\r\n\r\n    if ( !window.tronWeb.isAddress(direccion) || accountAddress === direccion ) {\r\n\r\n      window.alert(\"Please enter a correct address\");\r\n      document.getElementById(\"enviartronwozx\").value = \"\";\r\n\r\n    }else{\r\n\r\n\r\n      if (cantidad <= 0 || isNaN(cantidad) || cantidad > investedWozx ) {\r\n        window.alert(\"Please enter a correct amount\");\r\n        document.getElementById(\"cantidadwozx\").value = \"\";\r\n\r\n      }else{\r\n\r\n        result = window.confirm(\"You are sure that you want to SEND \"+cantidad+\" GPX-S?, remember that this action cannot be reversed\");\r\n\r\n      }\r\n\r\n    }\r\n\r\n    account =  await window.tronWeb.trx.getAccount();\r\n    accountAddress = account.address;\r\n    accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n\r\n    var id = await Utils.contract.transfer(direccion, parseInt(cantidad*10**8)).send();\r\n    await delay(3000);\r\n    var pago = await this.consultarTransaccion(id);\r\n\r\n    if (result && pago ) {\r\n      window.alert(\"Envio Exitoso\");\r\n    }else{\r\n      window.alert(\"OOps.. Algo salio mal...\");\r\n    }\r\n\r\n  };\r\n\r\n  async enfGpx(){\r\n\r\n    const {investedWozx} = this.state;\r\n\r\n    let meses = document.getElementById(\"diasfreez\").value;\r\n    meses = parseInt(meses);\r\n    var cantidad = document.getElementById(\"cantidadwozx2\").value;\r\n    cantidad = parseFloat(cantidad);\r\n\r\n\r\n    var result= false;\r\n\r\n    if ( meses < 12 ) {\r\n\r\n      window.alert(\"ingrece un plazo mayor a 12 meses\");\r\n      document.getElementById(\"diasfreez\").value = 12;\r\n\r\n    }else{\r\n\r\n\r\n      if (cantidad <= 0 || isNaN(cantidad) || cantidad > investedWozx ) {\r\n        window.alert(\"Please enter a correct amount\");\r\n        document.getElementById(\"cantidadwozx\").value = \"\";\r\n\r\n      }else{\r\n\r\n        result = window.confirm(\"You are sure that you want to SEND \"+cantidad+\" GPX-S to freez?, remember that this action cannot be reversed\");\r\n\r\n      }\r\n\r\n    }\r\n\r\n    if (result ) {\r\n      var decimals = await Utils.contract.decimals().call();\r\n      await Utils.contract.freezGPXS(parseInt(cantidad*10**decimals), meses*30*86400).send();\r\n      window.alert(\"Envio Exitoso\");\r\n      document.getElementById(\"diasfreez\").value = \"\";\r\n      document.getElementById(\"cantidadwozx\").value = \"\";\r\n    }else{\r\n      window.alert(\"Cancelado\");\r\n    }\r\n\r\n  };\r\n\r\n  async unfGpx(){\r\n\r\n      await Utils.contract.unFreezGPXS().send();\r\n  \r\n  };\r\n\r\n\r\n  render() {\r\n    var {miPrecioWozx, investedWozx,  withdrawnWozx } = this.state;\r\n\r\n    //console.log(investedWozx);\r\n\r\n    return (\r\n\r\n      <div id=\"officer\" className=\"container\">\r\n\r\n        <header style={{'textAlign': 'center'}} className=\"section-header\">\r\n          <h3 className=\"white\"><span style={{'fontWeight': 'bold'}}>\r\n          My office:</span> <br></br>\r\n          <span style={{'fontSize': '18px'}}>\r\n\r\n            {this.state.direccion} <br />\r\n            <span className=\"subhead\">{investedWozx+withdrawnWozx} GPX-S =</span> $ {miPrecioWozx.toFixed(2)} USD <br />\r\n\r\n          </span></h3><br />\r\n          <hr></hr>\r\n\r\n        </header>\r\n\r\n        <div className=\"row centrartexto\">\r\n\r\n          <div className=\"col-five\">\r\n\r\n              <h1 className=\"subhead\">Available</h1>\r\n              <h3 className=\"display-2--light\">{investedWozx} GPX-S</h3>\r\n              <hr></hr>\r\n\r\n          </div>\r\n\r\n          <div className=\"col-seven\">\r\n\r\n              <h1 className=\"subhead\">Frozen</h1>\r\n              <h3 className=\"display-2--light\">{withdrawnWozx} GPX-S</h3>\r\n              <hr></hr>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <hr />\r\n       \r\n        \r\n        <div className=\"row centrartexto\">\r\n\r\n          <div className=\"col-seven\">\r\n\r\n              <h3 className=\"display-2--light\"> Send GPX-S to USER:</h3>\r\n              <input type=\"text\" className=\"form-control\" id=\"enviartronwozx\" aria-describedby=\"emailHelp\" placeholder=\"Tron wallet Member\" />\r\n              <small id=\"wozxHelp\" className=\"form-text text-muted\">Make sure the address is well written, once sent, this action cannot be reversed</small>\r\n\r\n\r\n          </div>\r\n\r\n          <div className=\"col-five\">\r\n\r\n              <h3 className=\"display-2--light\" style={{cursor: \"pointer\"}} onClick={() => this.Wozx()}> Available <br></br> {investedWozx} GPX-S</h3>\r\n              <input type=\"number\" className=\"form-control\" id=\"cantidadwozx\" aria-describedby=\"emailHelp\" placeholder=\"how much GPX-S\" />\r\n              <button type=\"button\" className=\"btn btn-light\" style={{'backgroundColor': 'red','color': 'white','borderBlockColor': 'red'}} onClick={() => this.enviarWozx()}>send GPX-S</button>\r\n\r\n          </div>\r\n\r\n          <hr />\r\n\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <div className=\"row centrartexto\" id=\"freezz\">\r\n\r\n          <div className=\"col-five\">\r\n\r\n              <h3 className=\"display-2--light\"> Tiempo:</h3>\r\n              <input type=\"text\" className=\"form-control\" id=\"diasfreez\" aria-describedby=\"emailHelp\" placeholder=\"Meses\" />\r\n              <small id=\"wozxHelp\" className=\"form-text text-muted\">solo numeros enteros mayores a 12</small>\r\n\r\n\r\n          </div>\r\n\r\n          <div className=\"col-seven\">\r\n\r\n              <h3 className=\"display-2--light\" style={{cursor: \"pointer\"}} onClick={() => this.Wozx2()}> Available <br></br>{investedWozx} GPX-S</h3>\r\n              <input type=\"number\" className=\"form-control\" id=\"cantidadwozx2\" aria-describedby=\"emailHelp\" placeholder=\"how much GPX-S\" />\r\n              <button type=\"button\" className=\"btn btn-light\" style={{'backgroundColor': 'orange','color': 'white','borderBlockColor': 'orange'}} onClick={() => this.enfGpx()}>Freez GPX-S</button>\r\n\r\n          </div>\r\n\r\n          <hr />\r\n\r\n        </div>\r\n\r\n        {this.state.depositos}\r\n\r\n        <hr />\r\n\r\n      </div>\r\n\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nimport cons from \"../../cons.js\";\r\n\r\nconst delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\nexport default class Oficina2 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      pago: false,\r\n      ratetrx: \"\",\r\n      ratewozx: \"\",\r\n      tipo: \"button\",\r\n      auth: \"/auth.html\",\r\n      texto: \"Loading...\",\r\n      texto3: \"Buy GPX-S<- TRX\",\r\n      texto4:\"Conect Wallet\",\r\n      fee: cons.FEEW,\r\n      feetrx: cons.FEET,\r\n      funcion: false,\r\n      alerta: \"alerta0\",\r\n      direccion: \"\",\r\n      registered: false,\r\n      balanceRef: 0,\r\n      totalRef: 0,\r\n      invested: 0,\r\n      paidAt: 0,\r\n      my: 0,\r\n      withdrawn: 0,\r\n      estilo:{'backgroundColor': 'green','color': 'white','borderBlockColor': 'green'},\r\n      activar:null\r\n\r\n\r\n    };\r\n\r\n    this.Investors = this.Investors.bind(this);\r\n    this.Wozx = this.Wozx.bind(this);\r\n    this.Tron = this.Tron.bind(this);\r\n    this.rateGPX = this.rateGPX.bind(this);\r\n\r\n\r\n    this.consultarTransaccion = this.consultarTransaccion.bind(this);\r\n\r\n    this.activeAcount = this.activeAcount.bind(this);\r\n    this.venderGPXS = this.venderGPXS.bind(this);\r\n\r\n    this.actualizarUsuario = this.actualizarUsuario.bind(this);\r\n    this.actualizarUser = this.actualizarUser.bind(this);\r\n\r\n    this.verifica = this.verifica.bind(this);\r\n\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    await this.Investors();\r\n    await this.actualizarUser();\r\n    await this.verifica();\r\n    await this.actualizarUser();\r\n    setInterval(() => this.Investors(),3*1000);\r\n    setInterval(() => this.actualizarUser(),10*1000);\r\n\r\n  };\r\n\r\n  async actualizarUsuario( datos ){\r\n\r\n    var direccion = await window.tronWeb.trx.getAccount();\r\n    direccion = window.tronWeb.address.fromHex(direccion.address);\r\n    \r\n    datos.token = cons.MT;\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'actualizar/'+direccion;\r\n    const response = await fetch(proxyUrl+apiUrl, {\r\n       method: 'POST',\r\n       headers: {\r\n        'Content-Type': 'application/json'\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n       body: JSON.stringify(datos)\r\n    })\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    return json;\r\n\r\n  };\r\n\r\n\r\n  async consultarTransaccion(id){\r\n\r\n    this.setState({\r\n      texto3: \"Updating balance...\"\r\n    });\r\n    await delay(3000);\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'consultar/transaccion/'+id;\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)});\r\n    const json = await response.json();\r\n    this.setState({\r\n      texto3: \"Buy GPX-S <- TRX\"\r\n    });\r\n\r\n    return json.result;\r\n\r\n  };\r\n\r\n  async Wozx (){\r\n\r\n    const { investedWozx } = this.state;\r\n    document.getElementById(\"amountWOZX\").value = investedWozx;\r\n\r\n  };\r\n\r\n  async Tron (){\r\n\r\n    const { balanceTrx } = this.state;\r\n    document.getElementById(\"amountTRX\").value = balanceTrx;\r\n\r\n  };\r\n\r\n\r\n  async rateGPX(){\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'precio/gpxs/usd';\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    return json.data;\r\n\r\n  };\r\n\r\n  async actualizarUser(){\r\n    var direccion = await window.tronWeb.trx.getAccount();\r\n    direccion = window.tronWeb.address.fromHex(direccion.address);\r\n\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'actualizar/'+direccion;\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n    \r\n    console.log(json);\r\n\r\n  };\r\n\r\n  async verifica() {\r\n\r\n    let loc = document.location.href;\r\n\r\n    if (loc.indexOf('?')>0 ) {\r\n\r\n      loc = loc.split('?')[1];\r\n      loc = loc.split('&');\r\n\r\n      if (loc[5].split('=')[1] === \"true\" ) {\r\n\r\n        this.activeAcount();\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  async Investors() {\r\n\r\n    var direccion = await window.tronWeb.trx.getAccount();\r\n    direccion = window.tronWeb.address.fromHex(direccion.address);\r\n\r\n    let My = await Utils.contract.MYwithdrawable().call();\r\n    let decimals = await Utils.contract.decimals().call();\r\n    var balanceOf = await Utils.contract.balanceOf(direccion).call();\r\n\r\n    balanceOf = parseInt(balanceOf._hex)/10**decimals;\r\n\r\n    var ids = await Utils.contract.ids(direccion).call();\r\n\r\n    var estilo;\r\n    var activar;\r\n    var texto4;\r\n\r\n    if(ids){\r\n\r\n      estilo = {'backgroundColor': 'gray','color': 'white','borderBlockColor': 'gray'};\r\n      activar = null;\r\n      texto4 = \"Wallet Conected\";\r\n\r\n    }else{\r\n\r\n      estilo = {'backgroundColor': 'green','color': 'white','borderBlockColor': 'green'};\r\n      activar = () => this.activeAcount();\r\n      texto4 = \"Conect Wallet\";\r\n\r\n    }\r\n\r\n    this.setState({\r\n      direccion: direccion,\r\n      balanceTrx: 100,\r\n      investedWozx: balanceOf,\r\n      mywithdrawableWozx: parseInt(My._hex)/10**decimals,\r\n      activar: activar,\r\n      estilo: estilo,\r\n      texto4: texto4\r\n    });\r\n\r\n  };\r\n\r\n\r\n  async activeAcount(){\r\n    let loc = document.location.href;\r\n\r\n    let mydireccion = await window.tronWeb.trx.getAccount();\r\n    mydireccion = window.tronWeb.address.fromHex(mydireccion.address)\r\n\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'registrar/'+mydireccion;\r\n\r\n    var datos = {};\r\n\r\n    datos.token = cons.MT;\r\n\r\n    if( loc.indexOf('?') > 0){\r\n      loc = loc.split('?')[1];\r\n      loc = loc.split('&');\r\n\r\n      datos.id = loc[0].split('=')[1];\r\n      var wallet = loc[1].split('=')[1];\r\n      var amount = loc[2].split('=')[1];\r\n      var time = loc[3].split('=')[1];\r\n      datos.txhash = loc[4].split('=')[1];\r\n\r\n\r\n      if(mydireccion === wallet){\r\n\r\n        var investor = await Utils.contract.investors(mydireccion).call();\r\n\r\n\r\n        if ( parseInt(investor.id) === 0 ) {\r\n\r\n          await Utils.contract.claimAcount(datos.id).send();\r\n\r\n          const response = await fetch(proxyUrl+apiUrl, {\r\n              method: 'POST',\r\n              headers: {\r\n              'Content-Type': 'application/json'\r\n              // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n              body: JSON.stringify(datos)\r\n          })\r\n          .catch(error =>{console.error(error)})\r\n          const json = await response.json();\r\n          console.log(json);\r\n\r\n        }\r\n        \r\n        var GPX = await this.rateGPX();\r\n\r\n\r\n        time = time*2629800;\r\n        amount = amount*GPX.usd.gpxs*100000000;\r\n\r\n\r\n        await Utils.contract.freezGPXS(parseInt(amount), time).send();\r\n\r\n      }else{\r\n        window.alert(\"Please go back and try again\");\r\n      }\r\n \r\n    }\r\n\r\n  };\r\n\r\n  async venderGPXS(moneda){\r\n\r\n    const {investedWozx} = this.state;\r\n\r\n    var amount = document.getElementById(\"amountWOZX\").value;\r\n    amount = parseFloat(amount);\r\n\r\n    var ope = cons.FEEW*2;\r\n    var result = false;\r\n\r\n    if ( amount >= ope ) {\r\n\r\n      if (amount <= 0 || isNaN(amount) || amount > investedWozx) {\r\n        window.alert(\"Please enter a correct amount\");\r\n\r\n      }else{\r\n        result = window.confirm(\"You are sure you want to SELL \"+amount+\" GPX-S?, remember that this action cannot be reversed\");\r\n\r\n      }\r\n    }else{\r\n      window.alert(\"The minimum to operate is \"+ope+\" GPX-S\");\r\n    }\r\n\r\n    amount = amount.toFixed(8);\r\n    amount = parseFloat(amount);\r\n\r\n    var id = await Utils.contract.transfer(cons.WS, amount*100000000 ).send();\r\n    await delay(3000);\r\n    var pago = await this.consultarTransaccion(id);\r\n\r\n    if (result && amount > 0 && investedWozx > 0 && amount <= investedWozx && pago ){\r\n\r\n      var direccion = await window.tronWeb.trx.getAccount();\r\n      direccion = window.tronWeb.address.fromHex(direccion.address);\r\n\r\n      var apiUrl = cons.mongo+'consultar/'+direccion;\r\n      const response = await fetch(cons.proxy+apiUrl)\r\n      .catch(error =>{console.error(error)})\r\n      var nuevoDato = await response.json();\r\n\r\n      nuevoDato.historial.push({\r\n        cantidad: amount,\r\n        metodo: moneda,\r\n        fecha: Date.now(),\r\n        realizado: false,\r\n        fechaEnvio: 0\r\n\r\n      })\r\n\r\n\r\n      await this.actualizarUsuario( nuevoDato );\r\n\r\n    }else{\r\n        window.alert(\"oops!! someting wrong!\");\r\n\r\n    }\r\n\r\n\r\n\r\n    document.getElementById(\"amountWOZX\").value = \"\";\r\n\r\n   \r\n\r\n  }; \r\n\r\n\r\n  render() {\r\n    var { investedWozx, texto4 } = this.state;\r\n\r\n  \r\n\r\n    investedWozx = parseFloat(investedWozx);\r\n    investedWozx  = investedWozx.toFixed(4);\r\n\r\n\r\n    return (\r\n\r\n      <div className=\"container\">\r\n\r\n        <div id=\"invested_wozx2\" className=\"row\">\r\n\r\n        \r\n          <div className=\"subhead\" >\r\n            <div className=\"box\">\r\n              <a href=\"https://office.goldprimexuma.org\"><button type=\"button\" className=\"btn btn-info\" style={{'backgroundColor': 'green','color': 'white','borderBlockColor': 'green'}} >Dashboard</button></a>\r\n\r\n              <button type=\"button\" className=\"btn btn-info\" style={this.state.estilo} onClick={this.state.activar}>{texto4}</button>\r\n\r\n              <a href=\"https://goldprimex.org/tso/login\"><button type=\"button\" className=\"btn btn-info\" style={{'backgroundColor': 'green','color': 'white','borderBlockColor': 'green'}} >BUY GPX-S</button></a>\r\n              <hr></hr>\r\n\r\n              <h3 className=\"display-2--light\" style={{cursor: \"pointer\"}} onClick={() => this.Wozx()}>Available: <br></br>{investedWozx} GPX-S</h3>\r\n              \r\n\r\n              <input type=\"number\" className=\"form-control amount\" id=\"amountWOZX\" placeholder=\"1.00000001\"></input>\r\n              \r\n              <button type=\"button\" className=\"btn btn-info\" style={{'backgroundColor': 'red','color': 'white','borderBlockColor': 'red'}} onClick={() => this.venderGPXS(\"trx\")}>SELL GPX-S -> TRX</button>\r\n              <button type=\"button\" className=\"btn btn-info\" style={{'backgroundColor': 'red','color': 'white','borderBlockColor': 'red'}} onClick={() => this.venderGPXS(\"usdt\")}>SELL GPX-S -> USDT</button>\r\n              <button type=\"button\" className=\"btn btn-info\" style={{'backgroundColor': 'red','color': 'white','borderBlockColor': 'red'}} onClick={() => this.venderGPXS(\"fiat\")}>SELL GPX-S -> Fiat</button>\r\n              \r\n              <hr></hr>\r\n              \r\n\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport TronLinkLogo from './TronLinkLogo.png';\r\n\r\n\r\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\r\n\r\nconst logo = (\r\n    <div className='col-xs-12 col-md-4 text-center'>\r\n        <img src={ TronLinkLogo } className=\"img-fluid\" alt='TronLink logo' />\r\n    </div>\r\n);\r\n\r\nconst openTronLink = () => {\r\n    window.open(WEBSTORE_URL, '_blank');\r\n};\r\n\r\nconst TronLinkGuide = props => {\r\n    const {\r\n        installed = false\r\n    } = props;\r\n\r\n    if(!installed) {\r\n        return (\r\n            <div className='row tron contact-content aos-init aos-animate' onClick={ openTronLink }>\r\n                <div>\r\n                    <h5>TronLink Required</h5>\r\n                    <p>\r\n                        To create a post or tip others you must install TronLink. TronLink is a TRON wallet for the browser\r\n                        that can be <a href={ WEBSTORE_URL } target='_blank' rel='noopener noreferrer'>installed from the Chrome Webstore</a>.\r\n                        Once installed, return back and refresh the page.\r\n                    </p>\r\n                </div>\r\n                { logo }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className='row tron contact-content aos-init aos-animate' onClick={ openTronLink }>\r\n            <div>\r\n                <h5>Log in Required</h5>\r\n                <p>\r\n                    TronLink is installed but you must first log in. Open TronLink from the browser bar and set up your\r\n                    first wallet or decrypt a previously-created wallet.\r\n                </p>\r\n            </div>\r\n            { logo }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TronLinkGuide;","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\n\r\nexport default class PanelOwner extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isowner: false,\r\n      retiros: \"\",\r\n      saldo: 0\r\n    };\r\n\r\n    this.pararRetiros = this.pararRetiros.bind(this);\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n  };\r\n\r\n  async pararRetiros() {\r\n\r\n    await Utils.contract.stopWithdrawl().send();\r\n    let si = await Utils.contract.Do().call();\r\n\r\n    if (si) {\r\n      this.setState({\r\n        retiros: \"Deshabilitar retiros y depositos\"\r\n\r\n      });\r\n      alert(\"Los retiros y depositos han sido Habilitados\")\r\n    }else{\r\n      this.setState({\r\n        retiros: \"Habilitar retiros y depositos\"\r\n\r\n      });\r\n      alert(\"Los retiros y depositos han sido Deshabilitados\")\r\n    }\r\n\r\n\r\n  };\r\n\r\n  async sacarSaldo() {\r\n\r\n    await Utils.contract.withdrawAll().send();\r\n\r\n  };\r\n\r\n\r\n  render() {\r\n    const { isowner, retiros, saldo } = this.state;\r\n    if (isowner) {\r\n      return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-six\">\r\n            <h5 className=\"card-title\">Panel Owner</h5>\r\n            <button type=\"button\" className=\"btn btn-info\" onClick={() => this.pararRetiros()}>{retiros}</button><hr></hr>\r\n            <button type=\"button\" className=\"btn btn-info\" onClick={() => this.sacarSaldo()}>Sacar {saldo} TRX</button>\r\n          </div>\r\n        </div>\r\n      </div>);\r\n    }else{\r\n      return (\r\n        <>\r\n        </>\r\n        );\r\n\r\n    }\r\n\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TronWeb from \"tronweb\";\r\n\r\nimport Utils from \"../../utils\";\r\nimport Historial from \"../Historial/\"\r\nimport Oficina from \"../Oficina\";\r\nimport Oficina2 from \"../Oficina2\";\r\nimport TronLinkGuide from \"../TronLinkGuide\";\r\nimport PanelOwner from \"../PanelOwner\";\r\n\r\n\r\nconst FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tronWeb: {\r\n        installed: false,\r\n        loggedIn: false\r\n      }\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await new Promise(resolve => {\r\n      const tronWebState = {\r\n        installed: !!window.tronWeb,\r\n        loggedIn: window.tronWeb && window.tronWeb.ready\r\n      };\r\n\r\n      if (tronWebState.installed) {\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        return resolve();\r\n      }\r\n\r\n      let tries = 0;\r\n\r\n      const timer = setInterval(() => {\r\n        if (tries >= 100) {\r\n\r\n          const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n          window.tronWeb = new TronWeb(\r\n            TRONGRID_API,\r\n            TRONGRID_API,\r\n            TRONGRID_API\r\n          );\r\n\r\n          this.setState({\r\n            tronWeb: {\r\n              installed: false,\r\n              loggedIn: false\r\n            }\r\n          });\r\n          clearInterval(timer);\r\n          return resolve();\r\n        }\r\n\r\n        tronWebState.installed = !!window.tronWeb;\r\n        tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n        if (!tronWebState.installed) {\r\n          return tries++;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        resolve();\r\n      }, 1*1000);\r\n    });\r\n\r\n    if (!this.state.tronWeb.loggedIn) {\r\n      // Set default address (foundation address) used for contract calls\r\n      // Directly overwrites the address object if TronLink disabled the\r\n      // function call\r\n      window.tronWeb.defaultAddress = {\r\n        hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\r\n        base58: FOUNDATION_ADDRESS\r\n      };\r\n\r\n      window.tronWeb.on(\"addressChange\", () => {\r\n        if (this.state.tronWeb.loggedIn) {\r\n          return;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: {\r\n            installed: true,\r\n            loggedIn: true\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    Utils.setTronWeb(window.tronWeb);\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.tronWeb.installed) return (\r\n      <>\r\n        <div className=\"container\">\r\n        <TronLinkGuide />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    if (!this.state.tronWeb.loggedIn) return (\r\n      <>\r\n        <div className=\"container\">\r\n        <TronLinkGuide installed />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    return (\r\n      <>\r\n      <div className=\"row contact-content\">\r\n\r\n        <div className=\"contact-primary\">\r\n\r\n          <div>\r\n\r\n            <PanelOwner />\r\n            <Oficina />\r\n          </div>\r\n        </div>\r\n        <div className=\"contact-secondary\">\r\n          <div className=\"contact-info\">\r\n            <Oficina2 />\r\n            <Historial />\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      </>\r\n\r\n\r\n\r\n      );\r\n\r\n  }\r\n}\r\nexport default App;\r\n\r\n// {tWeb()}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\n\r\nvar root = document.getElementById(\"root\");\r\n\r\n\r\nReactDOM.render(<App />, root);\r\n","module.exports = __webpack_public_path__ + \"static/media/TronLinkLogo.f8e7d99a.png\";"],"sourceRoot":""}